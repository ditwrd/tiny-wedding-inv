package template

import (
	"github.com/ditwrd/wedinv/internal/models"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)

templ header() {
	<head>
		<title>WedInv</title>
		<meta charset="utf-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1"/>
		<script src="https://unpkg.com/htmx.org@1.9.12" integrity="sha384-ujb1lZYygJmzgSwoxRggbCHcjc0rB2XoQrxeTUQyRjrOnlCoYta87iKBWq3EsdM2" crossorigin="anonymous"></script>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" integrity="sha384-7P0NVe9LPDbUCAF+fH2R8Egwz1uqNH83Ns/bfJY0fN2XCDBMUI2S9gGzIOIRBKsA" crossorigin="anonymous"/>
		<link rel="stylesheet" href="/public/styles.css"/>
	</head>
}

templ Index(invitee models.Invitee) {
	<html lang="en">
		@header()
		<body>
			<main class="container">
				<section>
					@InviteeWelcome(invitee.Name, invitee.Status, invitee.InvitedBy)
				</section>
				<section>
					@Invitation()
				</section>
				<section id="response">
					<h2>Response Box</h2>
					@ResponseStatus(invitee.Status)
					<div class="grid">
						@ResponseButton(invitee.ID, "accept", invitee.Status == "accepted")
						@ResponseButton(invitee.ID, "decline", invitee.Status == "declined")
					</div>
				</section>
			</main>
		</body>
	</html>
}

templ InviteeWelcome(inviteeName string, status string, invitedBy string) {
	<h1>
		Wedding Invitation
	</h1>
	<p>
		Hello { inviteeName }, you are invited by { invitedBy }
	</p>
}

templ Invitation() {
	<h2>
		Invitation Box
	</h2>
	<p>
		This is the invitation
	</p>
}

templ ResponseStatus(inviteeStatus string) {
	<b id="status">
		if inviteeStatus=="waiting" {
			You haven't response to this invitation, please fill it soon!
		}
		if inviteeStatus=="accepted" {
			You've accepted this invitation, see you soon!
		}
		if inviteeStatus=="declined" {
			You've declined this invitation, we hope we can see you soon!
		}
	</b>
}

templ ResponseButton(inviteeID string, response string, disable bool) {
	<button
		id={ response + "-button" }
		hx-swap-oob="outerHTML"
		hx-put={ "/inv/" + inviteeID + "/" + response }
		hx-target="#status"
		hx-swap="outerHTML"
		if disable {
			disabled
		}
	>{ cases.Title(language.English, cases.Compact).String(response) }</button>
}
